# Generated by Django 5.2.4 on 2025-08-01 17:05

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TimerGoal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('goal_type', models.CharField(choices=[('daily', 'Daily Goal'), ('weekly', 'Weekly Goal'), ('monthly', 'Monthly Goal'), ('custom', 'Custom Goal')], default='daily', max_length=20)),
                ('target_duration', models.PositiveIntegerField(help_text='Target duration in minutes')),
                ('target_sessions', models.PositiveIntegerField(default=0, help_text='Target number of sessions')),
                ('target_completion_rate', models.DecimalField(decimal_places=2, default=80, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('current_duration', models.PositiveIntegerField(default=0)),
                ('current_sessions', models.PositiveIntegerField(default=0)),
                ('current_completion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timer_goals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Timer Goal',
                'verbose_name_plural': 'Timer Goals',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='TimerSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('session_type', models.CharField(choices=[('study', 'Study Session'), ('work', 'Work Session'), ('break', 'Break Session'), ('exercise', 'Exercise Session'), ('meditation', 'Meditation Session'), ('reading', 'Reading Session'), ('custom', 'Custom Session')], default='study', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('target_duration', models.PositiveIntegerField(help_text='Target duration in minutes')),
                ('actual_duration', models.PositiveIntegerField(default=0, help_text='Actual duration in minutes')),
                ('break_duration', models.PositiveIntegerField(default=0, help_text='Break duration in minutes')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('pause_start_time', models.DateTimeField(blank=True, null=True)),
                ('total_pause_duration', models.PositiveIntegerField(default=0, help_text='Total pause duration in minutes')),
                ('progress_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_completed', models.BooleanField(default=False)),
                ('auto_start_break', models.BooleanField(default=False)),
                ('auto_start_next_session', models.BooleanField(default=False)),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timer_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Timer Session',
                'verbose_name_plural': 'Timer Sessions',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='TimerBreak',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('break_type', models.CharField(choices=[('short', 'Short Break'), ('long', 'Long Break'), ('custom', 'Custom Break')], default='short', max_length=20)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('target_duration', models.PositiveIntegerField(help_text='Target break duration in minutes')),
                ('actual_duration', models.PositiveIntegerField(default=0, help_text='Actual break duration in minutes')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('is_skipped', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('timer_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='breaks', to='timer.timersession')),
            ],
            options={
                'verbose_name': 'Timer Break',
                'verbose_name_plural': 'Timer Breaks',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='TimerTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('template_type', models.CharField(choices=[('pomodoro', 'Pomodoro Technique'), ('study', 'Study Session'), ('work', 'Work Session'), ('exercise', 'Exercise Session'), ('meditation', 'Meditation Session'), ('custom', 'Custom Template')], default='custom', max_length=20)),
                ('session_duration', models.PositiveIntegerField(help_text='Session duration in minutes')),
                ('short_break_duration', models.PositiveIntegerField(default=5, help_text='Short break duration in minutes')),
                ('long_break_duration', models.PositiveIntegerField(default=15, help_text='Long break duration in minutes')),
                ('sessions_before_long_break', models.PositiveIntegerField(default=4, help_text='Number of sessions before long break')),
                ('auto_start_breaks', models.BooleanField(default=True)),
                ('auto_start_next_session', models.BooleanField(default=False)),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('is_favorite', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timer_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Timer Template',
                'verbose_name_plural': 'Timer Templates',
                'ordering': ['-usage_count', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TimerStatistics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('total_sessions', models.PositiveIntegerField(default=0)),
                ('total_duration', models.PositiveIntegerField(default=0, help_text='Total duration in minutes')),
                ('completed_sessions', models.PositiveIntegerField(default=0)),
                ('cancelled_sessions', models.PositiveIntegerField(default=0)),
                ('study_sessions', models.PositiveIntegerField(default=0)),
                ('work_sessions', models.PositiveIntegerField(default=0)),
                ('break_sessions', models.PositiveIntegerField(default=0)),
                ('exercise_sessions', models.PositiveIntegerField(default=0)),
                ('meditation_sessions', models.PositiveIntegerField(default=0)),
                ('reading_sessions', models.PositiveIntegerField(default=0)),
                ('custom_sessions', models.PositiveIntegerField(default=0)),
                ('average_session_duration', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('completion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('productivity_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timer_statistics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Timer Statistics',
                'verbose_name_plural': 'Timer Statistics',
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
    ]
