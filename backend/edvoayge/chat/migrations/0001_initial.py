# Generated by Django 5.2.4 on 2025-08-01 17:05

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_online', models.BooleanField(default=False)),
                ('last_seen', models.DateTimeField(default=django.utils.timezone.now)),
                ('profile_image', models.URLField(blank=True, max_length=255)),
                ('bio', models.TextField(blank=True)),
                ('specialization', models.CharField(blank=True, help_text='Medical specialization', max_length=100)),
                ('institution', models.CharField(blank=True, max_length=200)),
                ('role', models.CharField(blank=True, help_text='MBBS Student, Intern, GP, etc.', max_length=100)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='chat_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Chat User',
                'verbose_name_plural': 'Chat Users',
                'db_table': 'chat_users',
            },
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='For group chats', max_length=200)),
                ('type', models.CharField(choices=[('direct', 'Direct'), ('group', 'Group')], default='direct', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_rooms', to='chat.chatuser')),
            ],
            options={
                'verbose_name': 'Chat Room',
                'verbose_name_plural': 'Chat Rooms',
                'db_table': 'chat_rooms',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('file', 'File'), ('audio', 'Audio'), ('video', 'Video')], default='text', max_length=10)),
                ('media_url', models.URLField(blank=True, max_length=500, null=True)),
                ('file_name', models.CharField(blank=True, max_length=200, null=True)),
                ('file_size', models.IntegerField(blank=True, null=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='chat.message')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chat.chatroom')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='chat.chatuser')),
            ],
            options={
                'verbose_name': 'Chat Message',
                'verbose_name_plural': 'Chat Messages',
                'db_table': 'chat_messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('new_message', 'New Message'), ('message_reply', 'Message Reply'), ('contact_request', 'Contact Request'), ('group_invite', 'Group Invite')], max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='chat.chatuser')),
                ('message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='chat.message')),
            ],
            options={
                'verbose_name': 'Chat Notification',
                'verbose_name_plural': 'Chat Notifications',
                'db_table': 'chat_notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatRoomParticipant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('member', 'Member')], default='member', max_length=10)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='chat.chatroom')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_participations', to='chat.chatuser')),
            ],
            options={
                'verbose_name': 'Chat Room Participant',
                'verbose_name_plural': 'Chat Room Participants',
                'db_table': 'chat_room_participants',
                'unique_together': {('room', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nickname', models.CharField(blank=True, max_length=100, null=True)),
                ('is_favorite', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacted_by', to='chat.chatuser')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='chat.chatuser')),
            ],
            options={
                'verbose_name': 'Chat Contact',
                'verbose_name_plural': 'Chat Contacts',
                'db_table': 'chat_contacts',
                'unique_together': {('user', 'contact')},
            },
        ),
        migrations.CreateModel(
            name='MessageStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read')], default='sent', max_length=10)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='chat.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_statuses', to='chat.chatuser')),
            ],
            options={
                'verbose_name': 'Message Status',
                'verbose_name_plural': 'Message Statuses',
                'db_table': 'chat_message_status',
                'unique_together': {('message', 'user')},
            },
        ),
    ]
