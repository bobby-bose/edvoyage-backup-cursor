# Generated by Django 5.2.4 on 2025-08-01 17:05

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OTPVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp_type', models.CharField(choices=[('phone', 'Phone'), ('email', 'Email'), ('password_reset', 'Password Reset'), ('login', 'Login'), ('register', 'Register')], max_length=20, verbose_name='OTP Type')),
                ('contact', models.CharField(max_length=255, verbose_name='Contact (Phone/Email)')),
                ('otp_code', models.CharField(max_length=6, verbose_name='OTP Code')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('is_expired', models.BooleanField(default=False, verbose_name='Expired')),
                ('failed_attempts', models.PositiveIntegerField(default=0, verbose_name='Failed Attempts')),
                ('max_attempts', models.PositiveIntegerField(default=3, verbose_name='Max Attempts')),
                ('blocked_until', models.DateTimeField(blank=True, null=True, verbose_name='Blocked Until')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='Is Blocked')),
                ('device_id', models.CharField(blank=True, max_length=255, verbose_name='Device ID')),
                ('device_type', models.CharField(blank=True, max_length=50, verbose_name='Device Type')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(verbose_name='Expires At')),
                ('verified_at', models.DateTimeField(blank=True, null=True, verbose_name='Verified At')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='otp_verifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'OTP Verification',
                'verbose_name_plural': 'OTP Verifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('profile_update', 'Profile Update'), ('password_change', 'Password Change'), ('email_verification', 'Email Verification'), ('phone_verification', 'Phone Verification'), ('otp_verification', 'OTP Verification'), ('failed_login', 'Failed Login'), ('account_locked', 'Account Locked'), ('otp_blocked', 'OTP Blocked')], max_length=20, verbose_name='Activity Type')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('device_id', models.CharField(blank=True, max_length=255, verbose_name='Device ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Activity',
                'verbose_name_plural': 'User Activities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone Number')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('prefer_not_to_say', 'Prefer not to say')], max_length=20, verbose_name='Gender')),
                ('marital_status', models.CharField(blank=True, choices=[('single', 'Single'), ('married', 'Married'), ('divorced', 'Divorced'), ('widowed', 'Widowed')], max_length=20, verbose_name='Marital Status')),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='State')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Country')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Postal Code')),
                ('bio', models.TextField(blank=True, verbose_name='Bio')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profiles/', verbose_name='Profile Picture')),
                ('cover_photo', models.ImageField(blank=True, null=True, upload_to='profiles/covers/', verbose_name='Cover Photo')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Email Notifications')),
                ('push_notifications', models.BooleanField(default=True, verbose_name='Push Notifications')),
                ('sms_notifications', models.BooleanField(default=False, verbose_name='SMS Notifications')),
                ('is_phone_verified', models.BooleanField(default=False, verbose_name='Phone Verified')),
                ('is_email_verified', models.BooleanField(default=False, verbose_name='Email Verified')),
                ('is_profile_complete', models.BooleanField(default=False, verbose_name='Profile Complete')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_active', models.DateTimeField(auto_now=True, verbose_name='Last Active')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40, unique=True, verbose_name='Session Key')),
                ('device_type', models.CharField(blank=True, max_length=50, verbose_name='Device Type')),
                ('device_name', models.CharField(blank=True, max_length=100, verbose_name='Device Name')),
                ('device_id', models.CharField(max_length=255, unique=True, verbose_name='Device ID')),
                ('browser', models.CharField(blank=True, max_length=100, verbose_name='Browser')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('terminated', 'Terminated')], default='active', max_length=20)),
                ('login_time', models.DateTimeField(auto_now_add=True, verbose_name='Login Time')),
                ('logout_time', models.DateTimeField(blank=True, null=True, verbose_name='Logout Time')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Last Activity')),
                ('is_secure', models.BooleanField(default=False, verbose_name='Secure Connection')),
                ('is_mobile', models.BooleanField(default=False, verbose_name='Mobile Device')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Session',
                'verbose_name_plural': 'User Sessions',
                'ordering': ['-login_time'],
            },
        ),
        migrations.CreateModel(
            name='BiometricAuthentication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('biometric_type', models.CharField(choices=[('face', 'Face Recognition'), ('voice', 'Voice Recognition'), ('fingerprint', 'Fingerprint')], max_length=20, verbose_name='Biometric Type')),
                ('biometric_data', models.TextField(verbose_name='Biometric Data')),
                ('biometric_hash', models.CharField(max_length=255, verbose_name='Biometric Hash')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('last_used', models.DateTimeField(blank=True, null=True, verbose_name='Last Used')),
                ('failed_attempts', models.PositiveIntegerField(default=0, verbose_name='Failed Attempts')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biometric_auths', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Biometric Authentication',
                'verbose_name_plural': 'Biometric Authentications',
                'unique_together': {('user', 'biometric_type')},
            },
        ),
    ]
