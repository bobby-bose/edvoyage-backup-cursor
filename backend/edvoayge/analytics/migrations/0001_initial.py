# Generated by Django 5.2.4 on 2025-08-01 17:05

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticsWidget',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('widget_type', models.CharField(choices=[('chart', 'Chart'), ('table', 'Table'), ('metric', 'Metric'), ('map', 'Map'), ('funnel', 'Funnel'), ('heatmap', 'Heatmap'), ('custom', 'Custom')], max_length=20)),
                ('chart_type', models.CharField(blank=True, choices=[('line', 'Line Chart'), ('bar', 'Bar Chart'), ('pie', 'Pie Chart'), ('area', 'Area Chart'), ('scatter', 'Scatter Plot'), ('bubble', 'Bubble Chart'), ('radar', 'Radar Chart'), ('gauge', 'Gauge')], max_length=20)),
                ('query', models.JSONField(blank=True, default=dict)),
                ('metrics', models.JSONField(blank=True, default=list)),
                ('dimensions', models.JSONField(blank=True, default=list)),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('size', models.JSONField(blank=True, default=dict)),
                ('position', models.JSONField(blank=True, default=dict)),
                ('refresh_interval', models.PositiveIntegerField(default=300)),
                ('auto_refresh', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'analytics_widgets',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['widget_type', 'chart_type'], name='analytics_w_widget__f926dc_idx')],
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('name', 'category')},
            },
        ),
        migrations.CreateModel(
            name='PageType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('name', 'category')},
            },
        ),
        migrations.CreateModel(
            name='SessionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('name', 'category')},
            },
        ),
        migrations.CreateModel(
            name='AnalyticsDashboard',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('layout', models.JSONField(blank=True, default=dict)),
                ('widgets', models.JSONField(blank=True, default=list)),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('is_public', models.BooleanField(default=False)),
                ('refresh_interval', models.PositiveIntegerField(default=300)),
                ('auto_refresh', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_dashboards', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, related_name='shared_dashboards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'analytics_dashboards',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['created_by', 'created_at'], name='analytics_d_created_3954d3_idx')],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('event_type', models.CharField(choices=[('page_view', 'Page View'), ('button_click', 'Button Click'), ('form_submit', 'Form Submit'), ('link_click', 'Link Click'), ('search', 'Search'), ('download', 'Download'), ('video_play', 'Video Play'), ('video_pause', 'Video Pause'), ('video_complete', 'Video Complete'), ('scroll', 'Scroll'), ('hover', 'Hover'), ('focus', 'Focus'), ('blur', 'Blur'), ('error', 'Error'), ('success', 'Success'), ('warning', 'Warning'), ('info', 'Info'), ('custom', 'Custom')], max_length=20)),
                ('event_name', models.CharField(max_length=100)),
                ('event_category', models.CharField(blank=True, max_length=50)),
                ('event_action', models.CharField(blank=True, max_length=50)),
                ('event_label', models.CharField(blank=True, max_length=100)),
                ('page_url', models.URLField(blank=True)),
                ('page_title', models.CharField(blank=True, max_length=200)),
                ('referrer_url', models.URLField(blank=True)),
                ('user_agent', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('device_type', models.CharField(blank=True, max_length=20)),
                ('browser', models.CharField(blank=True, max_length=50)),
                ('os', models.CharField(blank=True, max_length=50)),
                ('country', models.CharField(blank=True, max_length=50)),
                ('region', models.CharField(blank=True, max_length=50)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('event_data', models.JSONField(blank=True, default=dict)),
                ('event_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analytics_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'analytics_events',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'event_type'], name='analytics_e_user_id_f87fa1_idx'), models.Index(fields=['event_type', 'created_at'], name='analytics_e_event_t_c3dcde_idx'), models.Index(fields=['session_id'], name='analytics_e_session_b3cbf5_idx'), models.Index(fields=['created_at'], name='analytics_e_created_3bce1d_idx')],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsExport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('export_type', models.CharField(choices=[('events', 'Events'), ('page_views', 'Page Views'), ('sessions', 'Sessions'), ('metrics', 'Metrics'), ('reports', 'Reports'), ('custom', 'Custom')], max_length=20)),
                ('format', models.CharField(choices=[('json', 'JSON'), ('csv', 'CSV'), ('excel', 'Excel'), ('pdf', 'PDF')], max_length=10)),
                ('date_range_start', models.DateField()),
                ('date_range_end', models.DateField()),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('fields', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('file_url', models.URLField(blank=True)),
                ('file_size', models.PositiveIntegerField(default=0)),
                ('record_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'analytics_exports',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['export_type', 'status'], name='analytics_e_export__9a9297_idx'), models.Index(fields=['created_by', 'created_at'], name='analytics_e_created_c40ea8_idx')],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('report_type', models.CharField(choices=[('user_behavior', 'User Behavior'), ('page_performance', 'Page Performance'), ('conversion_funnel', 'Conversion Funnel'), ('traffic_sources', 'Traffic Sources'), ('device_analytics', 'Device Analytics'), ('geographic_data', 'Geographic Data'), ('custom', 'Custom Report')], max_length=20)),
                ('format', models.CharField(choices=[('json', 'JSON'), ('csv', 'CSV'), ('pdf', 'PDF'), ('excel', 'Excel'), ('html', 'HTML')], default='json', max_length=10)),
                ('date_range_start', models.DateField()),
                ('date_range_end', models.DateField()),
                ('filters', models.JSONField(blank=True, default=dict)),
                ('metrics', models.JSONField(blank=True, default=list)),
                ('dimensions', models.JSONField(blank=True, default=list)),
                ('report_data', models.JSONField(blank=True, default=dict)),
                ('report_url', models.URLField(blank=True)),
                ('is_scheduled', models.BooleanField(default=False)),
                ('schedule_frequency', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly')], max_length=20)),
                ('last_generated', models.DateTimeField(blank=True, null=True)),
                ('next_generation', models.DateTimeField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_reports', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, related_name='shared_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'analytics_reports',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['report_type', 'created_at'], name='analytics_r_report__e5e6c6_idx'), models.Index(fields=['created_by', 'created_at'], name='analytics_r_created_50e516_idx')],
            },
        ),
        migrations.CreateModel(
            name='PageView',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('page_url', models.URLField()),
                ('page_title', models.CharField(blank=True, max_length=200)),
                ('page_category', models.CharField(blank=True, max_length=50)),
                ('page_section', models.CharField(blank=True, max_length=50)),
                ('view_duration', models.PositiveIntegerField(default=0)),
                ('scroll_depth', models.PositiveIntegerField(default=0)),
                ('is_bounce', models.BooleanField(default=True)),
                ('referrer_url', models.URLField(blank=True)),
                ('referrer_domain', models.CharField(blank=True, max_length=100)),
                ('user_agent', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('device_type', models.CharField(blank=True, max_length=20)),
                ('browser', models.CharField(blank=True, max_length=50)),
                ('os', models.CharField(blank=True, max_length=50)),
                ('country', models.CharField(blank=True, max_length=50)),
                ('region', models.CharField(blank=True, max_length=50)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page_views', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'page_views',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'page_url'], name='page_views_user_id_17c5c4_idx'), models.Index(fields=['page_url', 'created_at'], name='page_views_page_ur_17fb6f_idx'), models.Index(fields=['session_id'], name='page_views_session_108156_idx'), models.Index(fields=['created_at'], name='page_views_created_5023bb_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('sessions_count', models.PositiveIntegerField(default=0)),
                ('page_views_count', models.PositiveIntegerField(default=0)),
                ('events_count', models.PositiveIntegerField(default=0)),
                ('unique_pages_visited', models.PositiveIntegerField(default=0)),
                ('total_session_duration', models.PositiveIntegerField(default=0)),
                ('average_session_duration', models.PositiveIntegerField(default=0)),
                ('average_pages_per_session', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('conversions_count', models.PositiveIntegerField(default=0)),
                ('conversion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('is_returning_user', models.BooleanField(default=False)),
                ('days_since_first_visit', models.PositiveIntegerField(default=0)),
                ('custom_metrics', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_metrics',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['user', 'date'], name='user_metric_user_id_fc2016_idx'), models.Index(fields=['date'], name='user_metric_date_2054ce_idx')],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('page_views_count', models.PositiveIntegerField(default=0)),
                ('events_count', models.PositiveIntegerField(default=0)),
                ('unique_pages', models.PositiveIntegerField(default=0)),
                ('user_agent', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('device_type', models.CharField(blank=True, max_length=20)),
                ('browser', models.CharField(blank=True, max_length=50)),
                ('os', models.CharField(blank=True, max_length=50)),
                ('country', models.CharField(blank=True, max_length=50)),
                ('region', models.CharField(blank=True, max_length=50)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('session_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analytics_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_sessions',
                'ordering': ['-start_time'],
                'indexes': [models.Index(fields=['user', 'start_time'], name='user_sessio_user_id_c66047_idx'), models.Index(fields=['session_id'], name='user_sessio_session_e62ba3_idx'), models.Index(fields=['is_active'], name='user_sessio_is_acti_1b3cb1_idx')],
            },
        ),
    ]
