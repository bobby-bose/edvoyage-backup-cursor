"""
Django settings for edvoayge project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*4=oz87^klwj@y(v==q^)!@sw9o&002r%n6e%@fe#tg&#a+ufl'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Developer Mode for logging
DEVELOPER_MODE = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Third party apps
    'rest_framework',
    'corsheaders',
    'drf_yasg',

    'users',
    'universities',
    'courses',
    'applications',
    'notifications',
    'bookmarks',
    'payments',
    'quizzes',
    'content',
    'study_abroad',
    'timer',
    'ratings',
    'social',
    'search',
    'analytics',
    'web_integration',
    'notes',
    'simple_education',
    'cavity',
    'chat',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'edvoayge.middleware.CustomCSRFMiddleware',  # Add custom CSRF middleware
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'edvoayge.middleware.CustomAuthenticationMiddleware',  # Add custom authentication middleware
    
]

ROOT_URLCONF = 'edvoayge.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'edvoayge.wsgi.application'

POPPLER_PATH = r"C:\poppler\bin"

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# REST Framework Configuration
REST_FRAMEWORK = {
    # 'DEFAULT_AUTHENTICATION_CLASSES': [
    #     'rest_framework_simplejwt.authentication.JWTAuthentication',
    #     'rest_framework.authentication.SessionAuthentication',
    # ],
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.IsAuthenticated',
    # ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 25,
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.MultiPartParser',
        'rest_framework.parsers.FormParser',
    ],
    'EXCEPTION_HANDLER': 'rest_framework.views.exception_handler',
}

# JWT Settings
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=24),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
}

# CORS Settings
# For development, allow all origins so any Flutter frontend can access the API
CORS_ALLOW_ALL_ORIGINS = True  # WARNING: Restrict this in production!
CORS_ALLOWED_ORIGINS = [
    "http://192.168.137.1:3000",
    "http://127.0.0.1:3000",
    "http://192.168.137.1:8080",
    "http://127.0.0.1:8080",
    "http://192.168.137.1:8000",
    "http://127.0.0.1:8000",
    "http://192.168.137.1:5000",
    "http://127.0.0.1:5000",
    # Flutter web development ports
    "http://192.168.137.1:50265",
    "http://127.0.0.1:50265",
    "http://192.168.137.1:50266",
    "http://127.0.0.1:50266",
    "http://192.168.137.1:50267",
    "http://127.0.0.1:50267",
    "http://192.168.137.1:50268",
    "http://127.0.0.1:50268",
    "http://192.168.137.1:50269",
    "http://127.0.0.1:50269",
    "http://192.168.137.1:50270",
    "http://127.0.0.1:50270",
    "http://192.168.137.1:61601",
    "http://127.0.0.1:61601",
    # Chrome debug ports
    "http://192.168.137.1:9102",
    "http://127.0.0.1:9102",
    "http://localhost:5000",
]

# CSRF Settings for development
CSRF_TRUSTED_ORIGINS = [
    "http://192.168.137.1:3000",
    "http://127.0.0.1:3000",
    "http://192.168.137.1:8080",
    "http://127.0.0.1:8080",
    "http://192.168.137.1:8000",
    "http://127.0.0.1:8000",
    "http://192.168.137.1:5000",
    "http://127.0.0.1:5000",
    # Flutter web development ports
    "http://192.168.137.1:50265",
    "http://127.0.0.1:50265",
    "http://192.168.137.1:50266",
    "http://127.0.0.1:50266",
    "http://192.168.137.1:50267",
    "http://127.0.0.1:50267",
    "http://192.168.137.1:50268",
    "http://127.0.0.1:50268",
    "http://192.168.137.1:50269",
    "http://127.0.0.1:50269",
    "http://192.168.137.1:50270",
    "http://127.0.0.1:50270",
    "http://192.168.137.1:61601",
    "http://127.0.0.1:61601",
    # Chrome debug ports
    "http://192.168.137.1:9102",
    "http://127.0.0.1:9102",
]

# Additional CORS settings for Flutter web
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'device-id',  # Add custom header
]

# Additional settings for Flutter web compatibility
CORS_EXPOSE_HEADERS = [
    'content-type',
    'content-length',
    'authorization',
    'device-id',
]

# Allow all origins for development (more permissive)
CORS_ORIGIN_ALLOW_ALL = True

# Logging Configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs' / 'edvoyage.log',
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'root': {
        'handlers': ['console', 'file'],
        'level': 'INFO',
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}

# File Upload Settings
MAX_UPLOAD_SIZE_MB = 10
MAX_UPLOAD_SIZE = MAX_UPLOAD_SIZE_MB * 1024 * 1024

# Security Settings
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'

# Custom User Model (if needed)
# AUTH_USER_MODEL = 'users.User'

# Email Configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'bobbykboseoffice@gmail.com'
EMAIL_HOST_PASSWORD = 'qlxo uaqf zqix kndx'  # App password for Gmail
DEFAULT_FROM_EMAIL = 'bobbykboseoffice@gmail.com'
DEFAULT_TO_EMAIL = 'bobbykboseoffice@gmail.com'

# Swagger Settings
SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    },
    'USE_SESSION_AUTH': False,
}
